

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Oct  9 12:07:41 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=3
    15                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    17                           	dabs	1,0x4E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F84A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0004                     fsr             equ	4
    54     0004                     fsr0            equ	4
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0002                     pc              equ	2
    58     0002                     pcl             equ	2
    59     000A                     pclath          equ	10
    60     0003                     status          equ	3
    61     0000                     INDF            equ	0	;# 
    62     0001                     TMR0            equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR             equ	4	;# 
    66     0005                     PORTA           equ	5	;# 
    67     0006                     PORTB           equ	6	;# 
    68     0008                     EEDATA          equ	8	;# 
    69     0009                     EEADR           equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     0081                     OPTION_REG      equ	129	;# 
    73     0085                     TRISA           equ	133	;# 
    74     0086                     TRISB           equ	134	;# 
    75     0088                     EECON1          equ	136	;# 
    76     0089                     EECON2          equ	137	;# 
    77     0000                     INDF            equ	0	;# 
    78     0001                     TMR0            equ	1	;# 
    79     0002                     PCL             equ	2	;# 
    80     0003                     STATUS          equ	3	;# 
    81     0004                     FSR             equ	4	;# 
    82     0005                     PORTA           equ	5	;# 
    83     0006                     PORTB           equ	6	;# 
    84     0008                     EEDATA          equ	8	;# 
    85     0009                     EEADR           equ	9	;# 
    86     000A                     PCLATH          equ	10	;# 
    87     000B                     INTCON          equ	11	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISA           equ	133	;# 
    90     0086                     TRISB           equ	134	;# 
    91     0088                     EECON1          equ	136	;# 
    92     0089                     EECON2          equ	137	;# 
    93     0006                     _PORTB          set	6
    94     0005                     _PORTA          set	5
    95     002B                     _RA3            set	43
    96     002A                     _RA2            set	42
    97     0029                     _RA1            set	41
    98     0028                     _RA0            set	40
    99     0086                     _TRISB          set	134
   100     0085                     _TRISA          set	133
   101     0428                     _TRISA0         set	1064
   102                           
   103                           	psect	strings
   104     0001                     __pstrings:
   105     0001                     stringtab:
   106     0001                     __stringtab:
   107     0001                     stringcode:	
   108                           ;	String table - string pointers are 1 byte each
   109                           
   110     0001                     stringdir:
   111     0001  3000               	movlw	high stringdir
   112     0002  008A               	movwf	10
   113     0003  0804               	movf	4,w
   114     0004  0A84               	incf	4,f
   115     0005  0782               	addwf	2,f
   116     0006                     __stringbase:
   117     0006  3400               	retlw	0
   118     0007                     __end_of__stringtab:
   119     0007                     STR_1:
   120     0007  3425               	retlw	37	;'%'
   121     0008  3463               	retlw	99	;'c'
   122     0009  3400               	retlw	0
   123                           
   124                           	psect	cinit
   125     03F9                     start_initialization:	
   126                           ; #config settings
   127                           
   128     03F9                     __initialization:
   129                           
   130                           ; Clear objects allocated to BANK0
   131     03F9  1383               	bcf	3,7	;select IRP bank0
   132     03FA  300C               	movlw	low __pbssBANK0
   133     03FB  0084               	movwf	4
   134     03FC  3031               	movlw	low (__pbssBANK0+37)
   135     03FD  22CB               	fcall	clear_ram0
   136     03FE                     end_of_initialization:	
   137                           ;End of C runtime variable initialization code
   138                           
   139     03FE                     __end_of__initialization:
   140     03FE  0183               	clrf	3
   141     03FF  2B97               	ljmp	_main	;jump to C main() function
   142                           
   143                           	psect	bssBANK0
   144     000C                     __pbssBANK0:
   145     000C                     _dbuf:
   146     000C                     	ds	32
   147     002C                     _width:
   148     002C                     	ds	2
   149     002E                     _prec:
   150     002E                     	ds	2
   151     0030                     _flags:
   152     0030                     	ds	1
   153                           
   154                           	psect	clrtext
   155     02CB                     clear_ram0:	
   156                           ;	Called with FSR containing the base address, and
   157                           ;	W with the last address+1
   158                           
   159     02CB  0064               	clrwdt	;clear the watchdog before getting into this loop
   160     02CC                     clrloop0:
   161     02CC  0180               	clrf	0	;clear RAM location pointed to by FSR
   162     02CD  0A84               	incf	4,f	;increment pointer
   163     02CE  0604               	xorwf	4,w	;XOR with final address
   164     02CF  1903               	btfsc	3,2	;have we reached the end yet?
   165     02D0  3400               	retlw	0	;all done for this memory range, return
   166     02D1  0604               	xorwf	4,w	;XOR again to restore value
   167     02D2  2ACC               	goto	clrloop0	;do the next byte
   168                           
   169                           	psect	cstackCOMMON
   170     0000                     __pcstackCOMMON:
   171     0000                     ??_printf:
   172     0000                     ??_vfprintf:	
   173                           ; 1 bytes @ 0x0
   174                           
   175     0000                     ??_putch:	
   176                           ; 1 bytes @ 0x0
   177                           
   178     0000                     ??___init__:	
   179                           ; 1 bytes @ 0x0
   180                           
   181                           
   182                           	psect	cstackBANK0
   183     0031                     __pcstackBANK0:	
   184                           ; 1 bytes @ 0x0
   185                           
   186     0031                     ?_putch:
   187     0031                     ?___init__:	
   188                           ; 1 bytes @ 0x0
   189                           
   190     0031                     ?_fputc:	
   191                           ; 1 bytes @ 0x0
   192                           
   193     0031                     putch@c:	
   194                           ; 2 bytes @ 0x0
   195                           
   196     0031                     fputc@c:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 2 bytes @ 0x0
   201     0031                     	ds	2
   202     0033                     fputc@fp:
   203                           
   204                           ; 1 bytes @ 0x2
   205     0033                     	ds	1
   206     0034                     ??_fputc:
   207                           
   208                           ; 1 bytes @ 0x3
   209     0034                     	ds	5
   210     0039                     ?_vfpfcnvrt:
   211     0039                     vfpfcnvrt@fp:	
   212                           ; 1 bytes @ 0x8
   213                           
   214                           
   215                           ; 1 bytes @ 0x8
   216     0039                     	ds	1
   217     003A                     vfpfcnvrt@fmt:
   218                           
   219                           ; 1 bytes @ 0x9
   220     003A                     	ds	1
   221     003B                     vfpfcnvrt@ap:
   222                           
   223                           ; 1 bytes @ 0xA
   224     003B                     	ds	1
   225     003C                     ??_vfpfcnvrt:
   226                           
   227                           ; 1 bytes @ 0xB
   228     003C                     	ds	2
   229     003E                     vfpfcnvrt@c:
   230                           
   231                           ; 1 bytes @ 0xD
   232     003E                     	ds	1
   233     003F                     ?_vfprintf:
   234     003F                     vfprintf@fp:	
   235                           ; 2 bytes @ 0xE
   236                           
   237                           
   238                           ; 1 bytes @ 0xE
   239     003F                     	ds	1
   240     0040                     vfprintf@fmt:
   241                           
   242                           ; 1 bytes @ 0xF
   243     0040                     	ds	1
   244     0041                     vfprintf@ap:
   245                           
   246                           ; 1 bytes @ 0x10
   247     0041                     	ds	1
   248     0042                     vfprintf@cfmt:
   249                           
   250                           ; 1 bytes @ 0x11
   251     0042                     	ds	1
   252     0043                     ?_printf:
   253     0043                     printf@fmt:	
   254                           ; 2 bytes @ 0x12
   255                           
   256                           
   257                           ; 1 bytes @ 0x12
   258     0043                     	ds	3
   259     0046                     printf@ap:
   260                           
   261                           ; 1 bytes @ 0x15
   262     0046                     	ds	1
   263     0047                     ?_main:
   264     0047                     main@argc:	
   265                           ; 2 bytes @ 0x16
   266                           
   267                           
   268                           ; 2 bytes @ 0x16
   269     0047                     	ds	2
   270     0049                     main@argv:
   271                           
   272                           ; 2 bytes @ 0x18
   273     0049                     	ds	2
   274     004B                     ??_main:
   275                           
   276                           ; 1 bytes @ 0x1A
   277     004B                     	ds	3
   278                           
   279                           	psect	maintext
   280     0397                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 49 in file "main.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;  argc            2   22[BANK0 ] int 
   289 ;;  argv            2   24[BANK0 ] PTR PTR unsigned char 
   290 ;; Auto vars:     Size  Location     Type
   291 ;;  x               2    0        int 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  2   22[BANK0 ] int 
   294 ;; Registers used:
   295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0
   301 ;;      Params:         0       4
   302 ;;      Locals:         0       0
   303 ;;      Temps:          0       3
   304 ;;      Totals:         0       7
   305 ;;Total ram usage:        7 bytes
   306 ;; Hardware stack levels required when called: 5
   307 ;; This function calls:
   308 ;;		___init__
   309 ;;		_printf
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315     0397                     _main:	
   316                           ;psect for function _main
   317                           
   318     0397                     l821:	
   319                           ;incstack = 0
   320                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   321                           
   322     0397                     l823:
   323                           
   324                           ;main.c: 51:     printf("%c", x);
   325     0397  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   326     0398  1283               	bcf	3,5	;RP0=0, select bank0
   327     0399  00C3               	movwf	printf@fmt
   328     039A  3019               	movlw	25
   329     039B  00C4               	movwf	?_printf+1
   330     039C  3000               	movlw	0
   331     039D  00C5               	movwf	?_printf+2
   332     039E  22D3               	fcall	_printf
   333     039F                     l825:
   334                           
   335                           ;main.c: 52:     __init__();
   336     039F  22C3               	fcall	___init__
   337     03A0                     l827:
   338                           
   339                           ;main.c: 55:         if (RA0) {
   340     03A0  1283               	bcf	3,5	;RP0=0, select bank0
   341     03A1  1C05               	btfss	5,0	;volatile
   342     03A2  2BA4               	goto	u181
   343     03A3  2BA5               	goto	u180
   344     03A4                     u181:
   345     03A4  2BDC               	goto	l39
   346     03A5                     u180:
   347     03A5                     l829:
   348                           
   349                           ;main.c: 56:             (PORTB = 0b11101110);;
   350     03A5  30EE               	movlw	238
   351     03A6  0086               	movwf	6	;volatile
   352                           
   353                           ;main.c: 57:             (RA1 = 1);
   354     03A7  1485               	bsf	5,1	;volatile
   355     03A8                     l831:
   356                           
   357                           ;main.c: 58:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   358     03A8  3006               	movlw	6
   359     03A9  00CD               	movwf	??_main+2
   360     03AA  3013               	movlw	19
   361     03AB  00CC               	movwf	??_main+1
   362     03AC  30AD               	movlw	173
   363     03AD  00CB               	movwf	??_main
   364     03AE                     u197:
   365     03AE  0BCB               	decfsz	??_main,f
   366     03AF  2BAE               	goto	u197
   367     03B0  0BCC               	decfsz	??_main+1,f
   368     03B1  2BAE               	goto	u197
   369     03B2  0BCD               	decfsz	??_main+2,f
   370     03B3  2BAE               	goto	u197
   371     03B4  2BB5               	nop2
   372     03B5                     l833:
   373                           
   374                           ;main.c: 59:             (RA1 = 0);
   375     03B5  1283               	bcf	3,5	;RP0=0, select bank0
   376     03B6  1085               	bcf	5,1	;volatile
   377     03B7                     l835:
   378                           
   379                           ;main.c: 60:             (PORTB = 0b11011011);;
   380     03B7  30DB               	movlw	219
   381     03B8  0086               	movwf	6	;volatile
   382     03B9                     l837:
   383                           
   384                           ;main.c: 61:             (RA2 = 1);
   385     03B9  1505               	bsf	5,2	;volatile
   386                           
   387                           ;main.c: 62:             _delay((unsigned long)((500)*(4000000/4000.0)));
   388     03BA  3003               	movlw	3
   389     03BB  00CD               	movwf	??_main+2
   390     03BC  308A               	movlw	138
   391     03BD  00CC               	movwf	??_main+1
   392     03BE  3055               	movlw	85
   393     03BF  00CB               	movwf	??_main
   394     03C0                     u207:
   395     03C0  0BCB               	decfsz	??_main,f
   396     03C1  2BC0               	goto	u207
   397     03C2  0BCC               	decfsz	??_main+1,f
   398     03C3  2BC0               	goto	u207
   399     03C4  0BCD               	decfsz	??_main+2,f
   400     03C5  2BC0               	goto	u207
   401     03C6  2BC7               	nop2
   402     03C7                     l839:
   403                           
   404                           ;main.c: 63:             (RA2 = 0);
   405     03C7  1283               	bcf	3,5	;RP0=0, select bank0
   406     03C8  1105               	bcf	5,2	;volatile
   407     03C9                     l841:
   408                           
   409                           ;main.c: 64:             (PORTB = 0b01111110);;
   410     03C9  307E               	movlw	126
   411     03CA  0086               	movwf	6	;volatile
   412     03CB                     l843:
   413                           
   414                           ;main.c: 65:             (RA3 = 1);
   415     03CB  1585               	bsf	5,3	;volatile
   416                           
   417                           ;main.c: 66:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   418     03CC  3006               	movlw	6
   419     03CD  00CD               	movwf	??_main+2
   420     03CE  3013               	movlw	19
   421     03CF  00CC               	movwf	??_main+1
   422     03D0  30AD               	movlw	173
   423     03D1  00CB               	movwf	??_main
   424     03D2                     u217:
   425     03D2  0BCB               	decfsz	??_main,f
   426     03D3  2BD2               	goto	u217
   427     03D4  0BCC               	decfsz	??_main+1,f
   428     03D5  2BD2               	goto	u217
   429     03D6  0BCD               	decfsz	??_main+2,f
   430     03D7  2BD2               	goto	u217
   431     03D8  2BD9               	nop2
   432     03D9                     l845:
   433                           
   434                           ;main.c: 67:             (RA3 = 0);
   435     03D9  1283               	bcf	3,5	;RP0=0, select bank0
   436     03DA  1185               	bcf	5,3	;volatile
   437                           
   438                           ;main.c: 68:         } else {
   439     03DB  2BA0               	goto	l827
   440     03DC                     l39:
   441                           
   442                           ;main.c: 69:             (PORTB = 0b11101110);;
   443     03DC  30EE               	movlw	238
   444     03DD  0086               	movwf	6	;volatile
   445     03DE                     l847:
   446                           
   447                           ;main.c: 70:             PORTA = 0;
   448     03DE  0185               	clrf	5	;volatile
   449     03DF                     l849:
   450                           
   451                           ;main.c: 71:             (RA2 = 1);
   452     03DF  1505               	bsf	5,2	;volatile
   453     03E0                     l851:
   454                           
   455                           ;main.c: 72:             _delay((unsigned long)((100)*(4000000/4000.0)));
   456     03E0  3082               	movlw	130
   457     03E1  00CC               	movwf	??_main+1
   458     03E2  30DD               	movlw	221
   459     03E3  00CB               	movwf	??_main
   460     03E4                     u227:
   461     03E4  0BCB               	decfsz	??_main,f
   462     03E5  2BE4               	goto	u227
   463     03E6  0BCC               	decfsz	??_main+1,f
   464     03E7  2BE4               	goto	u227
   465     03E8  2BE9               	nop2
   466     03E9                     l853:
   467                           
   468                           ;main.c: 73:             (RA2 = 0);
   469     03E9  1283               	bcf	3,5	;RP0=0, select bank0
   470     03EA  1105               	bcf	5,2	;volatile
   471     03EB                     l855:
   472                           
   473                           ;main.c: 74:             _delay((unsigned long)((100)*(4000000/4000.0)));
   474     03EB  3082               	movlw	130
   475     03EC  00CC               	movwf	??_main+1
   476     03ED  30DD               	movlw	221
   477     03EE  00CB               	movwf	??_main
   478     03EF                     u237:
   479     03EF  0BCB               	decfsz	??_main,f
   480     03F0  2BEF               	goto	u237
   481     03F1  0BCC               	decfsz	??_main+1,f
   482     03F2  2BEF               	goto	u237
   483     03F3  2BF4               	nop2
   484     03F4                     l857:
   485                           
   486                           ;main.c: 75:             (RA2 = 1);
   487     03F4  1283               	bcf	3,5	;RP0=0, select bank0
   488     03F5  1505               	bsf	5,2	;volatile
   489     03F6                     l859:
   490                           
   491                           ;main.c: 76:             (RA2 = 0);
   492     03F6  1105               	bcf	5,2	;volatile
   493     03F7  2BA0               	goto	l827
   494     03F8  2800               	ljmp	start
   495     03F9                     __end_of_main:
   496                           
   497                           	psect	text1
   498     02D3                     __ptext1:	
   499 ;; *************** function _printf *****************
   500 ;; Defined at:
   501 ;;		line 5 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/printf.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
   504 ;;		 -> STR_1(3), 
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  ret             2    0        int 
   507 ;;  ap              1   21[BANK0 ] PTR void [1]
   508 ;;		 -> ?_printf(2), 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  2   18[BANK0 ] int 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0
   518 ;;      Params:         0       3
   519 ;;      Locals:         0       1
   520 ;;      Temps:          0       0
   521 ;;      Totals:         0       4
   522 ;;Total ram usage:        4 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 4
   525 ;; This function calls:
   526 ;;		_vfprintf
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532     02D3                     _printf:	
   533                           ;psect for function _printf
   534                           
   535     02D3                     l815:	
   536                           ;incstack = 0
   537                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   538                           
   539     02D3  3044               	movlw	(low ((?_printf| 0+1)))& (0+255)
   540     02D4  1283               	bcf	3,5	;RP0=0, select bank0
   541     02D5  00C6               	movwf	printf@ap
   542     02D6                     l817:
   543     02D6  01BF               	clrf	vfprintf@fp
   544     02D7  0843               	movf	printf@fmt,w
   545     02D8  00C0               	movwf	vfprintf@fmt
   546     02D9  3046               	movlw	(low (printf@ap| 0))& (0+255)
   547     02DA  00C1               	movwf	vfprintf@ap
   548     02DB  22DD               	fcall	_vfprintf
   549     02DC                     l592:
   550     02DC  0008               	return
   551     02DD                     __end_of_printf:
   552                           
   553                           	psect	text2
   554     02DD                     __ptext2:	
   555 ;; *************** function _vfprintf *****************
   556 ;; Defined at:
   557 ;;		line 1817 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
   560 ;;		 -> NULL(0), 
   561 ;;  fmt             1   15[BANK0 ] PTR const unsigned char 
   562 ;;		 -> STR_1(3), 
   563 ;;  ap              1   16[BANK0 ] PTR PTR void 
   564 ;;		 -> printf@ap(1), 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  cfmt            1   17[BANK0 ] PTR unsigned char 
   567 ;;		 -> STR_1(3), 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  2   14[BANK0 ] int 
   570 ;; Registers used:
   571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0
   577 ;;      Params:         0       3
   578 ;;      Locals:         0       1
   579 ;;      Temps:          0       0
   580 ;;      Totals:         0       4
   581 ;;Total ram usage:        4 bytes
   582 ;; Hardware stack levels used: 1
   583 ;; Hardware stack levels required when called: 3
   584 ;; This function calls:
   585 ;;		_vfpfcnvrt
   586 ;; This function is called by:
   587 ;;		_printf
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591     02DD                     _vfprintf:	
   592                           ;psect for function _vfprintf
   593                           
   594     02DD                     l801:	
   595                           ;incstack = 0
   596                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   597                           
   598                           
   599                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
   600     02DD  1283               	bcf	3,5	;RP0=0, select bank0
   601     02DE  0840               	movf	vfprintf@fmt,w
   602     02DF  00C2               	movwf	vfprintf@cfmt
   603                           
   604                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
   605     02E0  2AE8               	goto	l805
   606     02E1                     l803:
   607                           
   608                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
   609     02E1  083F               	movf	vfprintf@fp,w
   610     02E2  00B9               	movwf	vfpfcnvrt@fp
   611     02E3  3042               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
   612     02E4  00BA               	movwf	vfpfcnvrt@fmt
   613     02E5  0841               	movf	vfprintf@ap,w
   614     02E6  00BB               	movwf	vfpfcnvrt@ap
   615     02E7  2345               	fcall	_vfpfcnvrt
   616     02E8                     l805:
   617                           
   618                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
   619     02E8  1283               	bcf	3,5	;RP0=0, select bank0
   620     02E9  0842               	movf	vfprintf@cfmt,w
   621     02EA  0084               	movwf	4
   622     02EB  2001               	fcall	stringdir
   623     02EC  3A00               	xorlw	0
   624     02ED  1D03               	skipz
   625     02EE  2AF0               	goto	u171
   626     02EF  2AF1               	goto	u170
   627     02F0                     u171:
   628     02F0  2AE1               	goto	l803
   629     02F1                     u170:
   630     02F1                     l807:
   631                           
   632                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1835:  return 0;
   633     02F1  01BF               	clrf	?_vfprintf
   634     02F2  01C0               	clrf	?_vfprintf+1
   635     02F3                     l624:
   636     02F3  0008               	return
   637     02F4                     __end_of_vfprintf:
   638                           
   639                           	psect	text3
   640     0345                     __ptext3:	
   641 ;; *************** function _vfpfcnvrt *****************
   642 ;; Defined at:
   643 ;;		line 1177 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
   646 ;;		 -> NULL(0), 
   647 ;;  fmt             1    9[BANK0 ] PTR PTR unsigned char 
   648 ;;		 -> vfprintf@cfmt(1), 
   649 ;;  ap              1   10[BANK0 ] PTR PTR void 
   650 ;;		 -> printf@ap(1), 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  cp              2    0        PTR unsigned char 
   653 ;;  c               1   13[BANK0 ] unsigned char 
   654 ;;  done            1    0        _Bool 
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0
   664 ;;      Params:         0       3
   665 ;;      Locals:         0       1
   666 ;;      Temps:          0       2
   667 ;;      Totals:         0       6
   668 ;;Total ram usage:        6 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 2
   671 ;; This function calls:
   672 ;;		_fputc
   673 ;; This function is called by:
   674 ;;		_vfprintf
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678     0345                     _vfpfcnvrt:	
   679                           ;psect for function _vfpfcnvrt
   680                           
   681     0345                     l775:	
   682                           ;incstack = 0
   683                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   684                           
   685                           
   686                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.50/pic/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   687     0345  1283               	bcf	3,5	;RP0=0, select bank0
   688     0346  083A               	movf	vfpfcnvrt@fmt,w
   689     0347  0084               	movwf	4
   690     0348  1383               	bcf	3,7	;select IRP bank0
   691     0349  0800               	movf	0,w
   692     034A  0084               	movwf	4
   693     034B  2001               	fcall	stringdir
   694     034C  3A25               	xorlw	37
   695     034D  1D03               	skipz
   696     034E  2B50               	goto	u151
   697     034F  2B51               	goto	u150
   698     0350                     u151:
   699     0350  2B87               	goto	l795
   700     0351                     u150:
   701     0351                     l777:
   702                           
   703                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
   704     0351  083A               	movf	vfpfcnvrt@fmt,w
   705     0352  0084               	movwf	4
   706     0353  3001               	movlw	1
   707     0354  0780               	addwf	0,f
   708     0355                     l779:
   709                           
   710                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
   711     0355  01AC               	clrf	_width
   712     0356  01AD               	clrf	_width+1
   713     0357  3000               	movlw	0
   714     0358  00B0               	movwf	_flags
   715     0359                     l781:
   716                           
   717                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
   718     0359  30FF               	movlw	255
   719     035A  00AE               	movwf	_prec
   720     035B  30FF               	movlw	255
   721     035C  00AF               	movwf	_prec+1
   722     035D                     l783:
   723                           
   724                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1273:         if ((*fmt)[0] =
      +                          = 'c') {
   725     035D  083A               	movf	vfpfcnvrt@fmt,w
   726     035E  0084               	movwf	4
   727     035F  0800               	movf	0,w
   728     0360  0084               	movwf	4
   729     0361  2001               	fcall	stringdir
   730     0362  3A63               	xorlw	99
   731     0363  1D03               	skipz
   732     0364  2B66               	goto	u161
   733     0365  2B67               	goto	u160
   734     0366                     u161:
   735     0366  2B80               	goto	l791
   736     0367                     u160:
   737     0367                     l785:
   738                           
   739                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1274:             ++*fmt;
   740     0367  083A               	movf	vfpfcnvrt@fmt,w
   741     0368  0084               	movwf	4
   742     0369  3001               	movlw	1
   743     036A  0780               	addwf	0,f
   744                           
   745                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1275:             c = (unsign
      +                          ed char)(*(int *)__va_arg(*(int **)ap, (int)0));
   746     036B  083B               	movf	vfpfcnvrt@ap,w
   747     036C  0084               	movwf	4
   748     036D  0800               	movf	0,w
   749     036E  00BC               	movwf	??_vfpfcnvrt
   750     036F  3002               	movlw	2
   751     0370  0780               	addwf	0,f
   752     0371  083C               	movf	??_vfpfcnvrt,w
   753     0372  0084               	movwf	4
   754     0373  0800               	movf	0,w
   755     0374  00BE               	movwf	vfpfcnvrt@c
   756     0375                     l787:
   757                           
   758                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1277:    fputc(c, fp);
   759     0375  083E               	movf	vfpfcnvrt@c,w
   760     0376  00BC               	movwf	??_vfpfcnvrt
   761     0377  01BD               	clrf	??_vfpfcnvrt+1
   762     0378  083C               	movf	??_vfpfcnvrt,w
   763     0379  00B1               	movwf	fputc@c
   764     037A  083D               	movf	??_vfpfcnvrt+1,w
   765     037B  00B2               	movwf	fputc@c+1
   766     037C  0839               	movf	vfpfcnvrt@fp,w
   767     037D  00B3               	movwf	fputc@fp
   768     037E  22F4               	fcall	_fputc
   769     037F  2B96               	goto	l618
   770     0380                     l791:
   771                           
   772                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
   773     0380  1283               	bcf	3,5	;RP0=0, select bank0
   774     0381  083A               	movf	vfpfcnvrt@fmt,w
   775     0382  0084               	movwf	4
   776     0383  3001               	movlw	1
   777     0384  1383               	bcf	3,7	;select IRP bank0
   778     0385  0780               	addwf	0,f
   779     0386  2B96               	goto	l618
   780     0387                     l795:
   781                           
   782                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
   783     0387  083A               	movf	vfpfcnvrt@fmt,w
   784     0388  0084               	movwf	4
   785     0389  0800               	movf	0,w
   786     038A  0084               	movwf	4
   787     038B  2001               	fcall	stringdir
   788     038C  00BC               	movwf	??_vfpfcnvrt
   789     038D  01BD               	clrf	??_vfpfcnvrt+1
   790     038E  083C               	movf	??_vfpfcnvrt,w
   791     038F  00B1               	movwf	fputc@c
   792     0390  083D               	movf	??_vfpfcnvrt+1,w
   793     0391  00B2               	movwf	fputc@c+1
   794     0392  0839               	movf	vfpfcnvrt@fp,w
   795     0393  00B3               	movwf	fputc@fp
   796     0394  22F4               	fcall	_fputc
   797     0395  2B80               	goto	l791
   798     0396                     l618:
   799     0396  0008               	return
   800     0397                     __end_of_vfpfcnvrt:
   801                           
   802                           	psect	text4
   803     02F4                     __ptext4:	
   804 ;; *************** function _fputc *****************
   805 ;; Defined at:
   806 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputc.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  c               2    0[BANK0 ] int 
   809 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
   810 ;;		 -> NULL(0), 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2    0[BANK0 ] int 
   815 ;; Registers used:
   816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0
   822 ;;      Params:         0       3
   823 ;;      Locals:         0       0
   824 ;;      Temps:          0       5
   825 ;;      Totals:         0       8
   826 ;;Total ram usage:        8 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 1
   829 ;; This function calls:
   830 ;;		_putch
   831 ;; This function is called by:
   832 ;;		_vfpfcnvrt
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836     02F4                     _fputc:	
   837                           ;psect for function _fputc
   838                           
   839     02F4                     l761:	
   840                           ;incstack = 0
   841                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   842                           
   843     02F4  1283               	bcf	3,5	;RP0=0, select bank0
   844     02F5  0833               	movf	fputc@fp,w
   845     02F6  1903               	btfsc	3,2
   846     02F7  2AF9               	goto	u111
   847     02F8  2AFA               	goto	u110
   848     02F9                     u111:
   849     02F9  2AFF               	goto	l765
   850     02FA                     u110:
   851     02FA                     l763:
   852     02FA  0833               	movf	fputc@fp,w
   853     02FB  1D03               	btfss	3,2
   854     02FC  2AFE               	goto	u121
   855     02FD  2AFF               	goto	u120
   856     02FE                     u121:
   857     02FE  2B02               	goto	l767
   858     02FF                     u120:
   859     02FF                     l765:
   860     02FF  0831               	movf	fputc@c,w
   861     0300  22C2               	fcall	_putch
   862     0301  2B44               	goto	l636
   863     0302                     l767:
   864     0302  0833               	movf	fputc@fp,w
   865     0303  3E08               	addlw	8
   866     0304  0084               	movwf	4
   867     0305  1383               	bcf	3,7	;select IRP bank0
   868     0306  0800               	movf	0,w
   869     0307  00B4               	movwf	??_fputc
   870     0308  0A84               	incf	4,f
   871     0309  0800               	movf	0,w
   872     030A  00B5               	movwf	??_fputc+1
   873     030B  0834               	movf	??_fputc,w
   874     030C  0435               	iorwf	??_fputc+1,w
   875     030D  1903               	btfsc	3,2
   876     030E  2B10               	goto	u131
   877     030F  2B11               	goto	u130
   878     0310                     u131:
   879     0310  2B2E               	goto	l771
   880     0311                     u130:
   881     0311                     l769:
   882     0311  0833               	movf	fputc@fp,w
   883     0312  3E08               	addlw	8
   884     0313  0084               	movwf	4
   885     0314  0800               	movf	0,w
   886     0315  00B4               	movwf	??_fputc
   887     0316  0A84               	incf	4,f
   888     0317  0800               	movf	0,w
   889     0318  00B5               	movwf	??_fputc+1
   890     0319  0A33               	incf	fputc@fp,w
   891     031A  0084               	movwf	4
   892     031B  0800               	movf	0,w
   893     031C  00B6               	movwf	??_fputc+2
   894     031D  0A84               	incf	4,f
   895     031E  0800               	movf	0,w
   896     031F  00B7               	movwf	??_fputc+3
   897     0320  0837               	movf	??_fputc+3,w
   898     0321  3A80               	xorlw	128
   899     0322  00B8               	movwf	??_fputc+4
   900     0323  0835               	movf	??_fputc+1,w
   901     0324  3A80               	xorlw	128
   902     0325  0238               	subwf	??_fputc+4,w
   903     0326  1D03               	skipz
   904     0327  2B2A               	goto	u145
   905     0328  0834               	movf	??_fputc,w
   906     0329  0236               	subwf	??_fputc+2,w
   907     032A                     u145:
   908     032A  1803               	skipnc
   909     032B  2B2D               	goto	u141
   910     032C  2B2E               	goto	u140
   911     032D                     u141:
   912     032D  2B44               	goto	l636
   913     032E                     u140:
   914     032E                     l771:
   915     032E  1283               	bcf	3,5	;RP0=0, select bank0
   916     032F  0A33               	incf	fputc@fp,w
   917     0330  0084               	movwf	4
   918     0331  1383               	bcf	3,7	;select IRP bank0
   919     0332  0800               	movf	0,w
   920     0333  00B4               	movwf	??_fputc
   921     0334  0833               	movf	fputc@fp,w
   922     0335  0084               	movwf	4
   923     0336  0800               	movf	0,w
   924     0337  0734               	addwf	??_fputc,w
   925     0338  00B5               	movwf	??_fputc+1
   926     0339  0835               	movf	??_fputc+1,w
   927     033A  0084               	movwf	4
   928     033B  0831               	movf	fputc@c,w
   929     033C  0080               	movwf	0
   930     033D  0A33               	incf	fputc@fp,w
   931     033E  0084               	movwf	4
   932     033F  3001               	movlw	1
   933     0340  0780               	addwf	0,f
   934     0341  0A84               	incf	4,f
   935     0342  1803               	skipnc
   936     0343  0A80               	incf	0,f
   937     0344                     l636:
   938     0344  0008               	return
   939     0345                     __end_of_fputc:
   940                           
   941                           	psect	text5
   942     02C2                     __ptext5:	
   943 ;; *************** function _putch *****************
   944 ;; Defined at:
   945 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/putch.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  c               1    wreg     unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  c               1    0[BANK0 ] unsigned char 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0
   959 ;;      Params:         0       0
   960 ;;      Locals:         0       0
   961 ;;      Temps:          0       0
   962 ;;      Totals:         0       0
   963 ;;Total ram usage:        0 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_fputc
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972     02C2                     _putch:	
   973                           ;psect for function _putch
   974                           
   975     02C2                     l647:	
   976                           ;incstack = 0
   977                           ; Regs used in _putch: [wreg]
   978                           
   979     02C2  0008               	return
   980     02C3                     __end_of_putch:
   981                           
   982                           	psect	text6
   983     02C3                     __ptext6:	
   984 ;; *************** function ___init__ *****************
   985 ;; Defined at:
   986 ;;		line 35 in file "main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		status,2
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0
  1000 ;;      Params:         0       0
  1001 ;;      Locals:         0       0
  1002 ;;      Temps:          0       0
  1003 ;;      Totals:         0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013     02C3                     ___init__:	
  1014                           ;psect for function ___init__
  1015                           
  1016     02C3                     l811:	
  1017                           ;incstack = 0
  1018                           ; Regs used in ___init__: [status,2]
  1019                           
  1020                           
  1021                           ;main.c: 36:     TRISA = 0;
  1022     02C3  1683               	bsf	3,5	;RP0=1, select bank1
  1023     02C4  0185               	clrf	5	;volatile
  1024                           
  1025                           ;main.c: 37:     TRISB = 0;
  1026     02C5  0186               	clrf	6	;volatile
  1027     02C6                     l813:
  1028                           
  1029                           ;main.c: 38:     TRISA0 = 1;
  1030     02C6  1405               	bsf	5,0	;volatile
  1031                           
  1032                           ;main.c: 39:     PORTA = 0;
  1033     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1034     02C8  0185               	clrf	5	;volatile
  1035                           
  1036                           ;main.c: 40:     PORTB = 0;
  1037     02C9  0186               	clrf	6	;volatile
  1038     02CA                     l33:
  1039     02CA  0008               	return
  1040     02CB                     __end_of___init__:
  1041     0000                     ___latbits      equ	0
  1042     004E                     btemp           set	78	;btemp
  1043     004E                     wtemp0          set	78

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     29      66

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    S499$buffer	PTR unsigned char  size(1) Largest target is 0

    S499$source	PTR const unsigned char  size(1) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4     679
                                             22 BANK0      7     3      4
                           ___init__
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     3      3     656
                                             18 BANK0      4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3     601
                                             14 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                            9     6      3     476
                                              8 BANK0      6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     230
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) ___init__                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___init__
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            66      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               66     29      66    100.0%
STACK                0      0       0      0.0%
DATA                 0      0      66      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Oct  9 12:07:41 2024

                      pc 0002                       l33 02CA                       l39 03DC  
                     fsr 0004                      l624 02F3                      l801 02DD  
                    l618 0396                      l811 02C3                      l803 02E1  
                    l636 0344                      l813 02C6                      l805 02E8  
                    l821 0397                      l647 02C2                      l807 02F1  
                    l815 02D3                      l831 03A8                      l823 0397  
                    l592 02DC                      l761 02F4                      l817 02D6  
                    l841 03C9                      l833 03B5                      l825 039F  
                    l771 032E                      l763 02FA                      l851 03E0  
                    l843 03CB                      l835 03B7                      l827 03A0  
                    l765 02FF                      l781 0359                      l853 03E9  
                    l845 03D9                      l837 03B9                      l829 03A5  
                    l767 0302                      l791 0380                      l783 035D  
                    l775 0345                      l855 03EB                      l847 03DE  
                    l839 03C7                      l769 0311                      l785 0367  
                    l777 0351                      l857 03F4                      l849 03DF  
                    l787 0375                      l779 0355                      l795 0387  
                    l859 03F6                      _RA0 0028                      _RA1 0029  
                    _RA2 002A                      _RA3 002B                      u110 02FA  
                    u111 02F9                      u120 02FF                      u121 02FE  
                    u130 0311                      u131 0310                      u140 032E  
                    u141 032D                      u150 0351                      u151 0350  
                    u207 03C0                      u160 0367                      u145 032A  
                    u161 0366                      u217 03D2                      u170 02F1  
                    u171 02F0                      u227 03E4                      u180 03A5  
                    u237 03EF                      u181 03A4                      u197 03AE  
                    fsr0 0004                      indf 0000                     STR_1 0007  
                   _dbuf 000C                     _main 0397                     _prec 002E  
                   btemp 004E                     start 0000                    ?_main 0047  
           vfpfcnvrt@fmt 003A                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _flags 0030  
                  _fputc 02F4                    _width 002C                    _putch 02C2  
                  pclath 000A                    status 0003                    wtemp0 004E  
        __initialization 03F9             __end_of_main 03F9                   ??_main 004B  
                 ?_fputc 0031                   ?_putch 0031         __end_of___init__ 02CB  
                 _TRISA0 0428             vfprintf@cfmt 0042                   _printf 02D3  
                 fputc@c 0031                   putch@c 0031         __end_of_vfprintf 02F4  
__end_of__initialization 03FE           __pcstackCOMMON 0000            __end_of_fputc 0345  
          __end_of_putch 02C3                  ??_fputc 0034                  ??_putch 0000  
             __pbssBANK0 000C               __pmaintext 0397                ?___init__ 0031  
                ?_printf 0043               __stringtab 0001                ?_vfprintf 003F  
             ??___init__ 0000                  __ptext1 02D3                  __ptext2 02DD  
                __ptext3 0345                  __ptext4 02F4                  __ptext5 02C2  
                __ptext6 02C3                  clrloop0 02CC     end_of_initialization 03FE  
                fputc@fp 0033        __end_of_vfpfcnvrt 0397               ??_vfprintf 0000  
            vfpfcnvrt@ap 003B              vfpfcnvrt@fp 0039           __end_of_printf 02DD  
    start_initialization 03F9              vfprintf@fmt 0040                 ??_printf 0000  
              ___latbits 0000            __pcstackBANK0 0031                __pstrings 0001  
              clear_ram0 02CB                _vfpfcnvrt 0345              __stringbase 0006  
             vfpfcnvrt@c 003E               vfprintf@ap 0041               vfprintf@fp 003F  
             ?_vfpfcnvrt 0039                 ___init__ 02C3       __end_of__stringtab 0007  
               _vfprintf 02DD                printf@fmt 0043                 main@argc 0047  
               main@argv 0049                stringcode 0001                 printf@ap 0046  
            ??_vfpfcnvrt 003C                 stringdir 0001                 stringtab 0001  
